/*
   Copyright The containerd Authors.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

syntax = "proto3";

package nri.pkg.auth.v1alpha1;

option go_package = "github.com/containerd/nri/pkg/auth;auth";

// Authentication service for a challenge/response authentication.
// It is used to establish reliable identification of NRI plugins.
service Authentication {
    // Request a challenge for proving identity.
    rpc RequestChallenge(RequestChallengeRequest) returns (RequestChallengeResponse);
    // Provide a response to the challenge to prove identity.
    rpc RespondChallenge(RespondChallengeRequest) returns (RespondChallengeResponse);
}

message RequestChallengeRequest {
    // Algorithm to use for authentication.
    string algorithm = 1;
    // Public key of the plugin.
    bytes public_key = 2;
}

message RequestChallengeResponse {
    // Public key of the runtime for challenge exchange.
    bytes public_key = 1;
    // Encrypted challenge for the plugin.
    bytes challenge = 2;
}

message RespondChallengeRequest {
    // Encrypted response for the challenge by the plugin.
    bytes response = 1;
}

message RespondChallengeResponse {
    // Role the plugin was authenticated to.
    string role = 1;
    // Any tags associated with the role.
    map<string,string> tags = 2;
}
